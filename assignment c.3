List the components of Hadoop 2.x
*Hadoop 2.x supports two Name Nodes at a time one node is active and another is standby node    
*When Active Name Node is down, Standby Name Node takes over and will handle the client operations then after.
*It has some new Java APIs and features in HDFS and MapReduce which are known as HDFS2 and MR2 respectively
New architecture has added the architectural features like HDFS High Availability and HDFS Federation
*Hadoop 2.x not using Job Tracker and Task Tracker daemons for resource management now on-wards, it is using
YARN (Yet Another Resource Negotiator) for Resource Management
*Active Name Node handles the client operations in the cluster
*StandBy Name Node manages metadata same as Secondary Name Node in Hadoop 1.x

*Hadoop 2.x has some important components
# MAP REDUCE(Processing part)

 - Master Daemon -
 *It communicates with Node Manager daemon process on the slave node to track the resource utilization
 *It uses two other processes named Application Manager and Scheduler for MapReduce task and resource management
 *This daemon process runs on master node (may run on the same machine as name node for smaller clusters)
 *This daemon process runs on master node (may run on the same machine as name node for smaller clusters)
 *It is responsible for getting job submitted from client and schedule it on cluster, monitoring running jobs on cluster and allocating proper resources on the slave node
 
 - Slave Daemon  - Node Manager
  * It also reports the resource utilization back to the Resource Manager
  * It uses other daemon process like Application Master and Container for MapReduce task scheduling and execution on the slave node
  * This daemon process runs on slave nodes (normally on HDFS Data node machines)
  * It is responsible for coordinating with Resource Manager for task scheduling and tracking the resource utilization on the slave node
  
# HDFS(Storage part)
 - Master Daemon - 
  * High End Machines
  *Usually 1 in number
 - Slave Daemon  - Datanode
  *Commodity Machines
  *Many in numbers
